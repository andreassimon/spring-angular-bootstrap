buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'http://repo.spring.io/plugins-release' }
        jcenter()
    }

    dependencies {
        classpath "gradle.plugin.com.github.jk1:gradle-license-report:0.3.5"
    }
}

plugins {
    id "org.springframework.boot" version "1.4.2.RELEASE"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.jk1.dependency-license-report'


jar {
	baseName = 'bootstrap-backend'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')

	runtime('org.springframework.boot:spring-boot-devtools')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

ext {
    licenseReportFileName = "$projectDir/src/docs/asciidoc/backend-licenses.adoc"
}

licenseReport {
    // Set output directory for the report data.
    // Defaults to ${project.buildDir}/reports/dependency-license.
    // outputDir = "$projectDir/build/licenses"

    // List the groups ids to exclude from dependency report.
    // By default project's own group is excluded.
    // For finer granularity, see: excludes.
    // excludeGroups = ['do.not.want']

    // List the ids (in module:name format) to exclude from dependency report.
    // By default excludes is empty.
    // excludes = ['moduleGroup:moduleName']

    // Set custom report renderer, implementing ReportRenderer.
    renderer = new de.quagilis.license.render.TsvLicenseReportRenderer(licenseReportFileName)

    // Set importers to import any external dependency information, i.e. from npm.
    // Custom importer should implement DependencyDataImporter interface.
    // importers = [new XmlReportImporter('Frontend dependencies', file(frontend_libs.xml))]

    // Adjust the configurations to use, e.g. for Android projects.
    // configurations = ['compile']
}
